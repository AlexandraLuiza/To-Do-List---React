[{"D:\\React projects\\todolist\\src\\index.js":"1","D:\\React projects\\todolist\\src\\App.js":"2","D:\\React projects\\todolist\\src\\reportWebVitals.js":"3","D:\\React projects\\todolist\\src\\components\\Form.js":"4","D:\\React projects\\todolist\\src\\components\\TodoList.js":"5","D:\\React projects\\todolist\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1662,"mtime":1609679549938,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1135,"mtime":1609628151579,"results":"11","hashOfConfig":"8"},{"size":491,"mtime":1609625713732,"results":"12","hashOfConfig":"8"},{"size":850,"mtime":1609622653662,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1wtdmo5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\React projects\\todolist\\src\\index.js",[],["29","30"],"D:\\React projects\\todolist\\src\\App.js",["31","32","33"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //used only once when saving locally\n  useEffect(() => {\n    getLocalTodos(); \n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  //saving locally  \n\nconst saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n};\n\nconst getLocalTodos = () =>{\n  if(localStorage.getItem('todos') === null) {\n    localStorage.setItem('todos', JSON.stringify([]));\n  }else{\n    let todolocal =  JSON.parse(localStorage.getItem(todos));\n    setFilteredTodos(todolocal);\n  }\n}\n\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>TO DO List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        todos={todos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\React projects\\todolist\\src\\reportWebVitals.js",[],"D:\\React projects\\todolist\\src\\components\\Form.js",[],"D:\\React projects\\todolist\\src\\components\\TodoList.js",[],"D:\\React projects\\todolist\\src\\components\\Todo.js",[],["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":15,"column":6,"nodeType":"42","endLine":15,"endColumn":8,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":19,"column":6,"nodeType":"42","endLine":19,"endColumn":21,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":37,"column":7,"nodeType":"48","messageId":"49","endLine":37,"endColumn":21},{"ruleId":"36","replacedBy":"50"},{"ruleId":"38","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocalTodos'. Either include it or remove the dependency array.","ArrayExpression",["54"],"React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.",["55"],"no-unused-vars","'saveLocalTodos' is assigned a value but never used.","Identifier","unusedVar",["52"],["53"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},{"desc":"58","fix":"59"},"Update the dependencies array to be: [getLocalTodos]",{"range":"60","text":"61"},"Update the dependencies array to be: [todos, status, filterHandler]",{"range":"62","text":"63"},[458,460],"[getLocalTodos]",[510,525],"[todos, status, filterHandler]"]